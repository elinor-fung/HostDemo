<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>

    <!-- Move the managed outputs of the project into a special directory -->
    <OutputPath>DoNotUse/$(Configuration)</OutputPath>
  </PropertyGroup>

  <ItemGroup>
    <!-- Project reference to the JavaHost.
         Project reference is used to ensure the generated header
         files are created prior to native bridge build
    -->
    <ProjectReference Include="$(SourceRoot)/JavaHost/JavaHost.proj" />
  </ItemGroup>

  <!-- Properties for the native project -->
  <PropertyGroup>
    <NativeSource>$(MSBuildThisFileDirectory).</NativeSource>
    <NativeBuildDir>$(MSBuildThisFileDirectory)nobj/$(Configuration)</NativeBuildDir>
    <!-- <NativeBinDir>$(MSBuildThisFileDirectory)nbin</NativeBinDir> -->
    <NativeBinDir>$(BinRoot)/$(Configuration)</NativeBinDir>
    <JavaInclude>$(JDKRoot)/include</JavaInclude>
  </PropertyGroup>

  <!-- Target to build the native project -->
  <Target Name="BuildNativeProject"
          AfterTargets="Build">
    <PropertyGroup>
      <NativeArch>x64</NativeArch>
      <NetHostDir>$(NetCoreTargetingPackRoot)/Microsoft.NETCore.App.Host.$(NETCoreSdkRuntimeIdentifier)/$(BundledNETCoreAppPackageVersion)/runtimes/$(NETCoreSdkRuntimeIdentifier)/native</NetHostDir>

      <NetHostName Condition="$([MSBuild]::IsOsPlatform('Windows'))">nethost.dll</NetHostName>
      <NetHostName Condition="$([MSBuild]::IsOsPlatform('Linux'))">libnethost.so</NetHostName>
      <NetHostName Condition="$([MSBuild]::IsOsPlatform('OSX'))">libnethost.dylib</NetHostName>

      <CMakeDefines>-D CMAKE_INSTALL_PREFIX=&quot;$(NativeBinDir)&quot; -D GENERATED_INC=&quot;$(GeneratedInc)&quot; -D NETHOST_DIR=&quot;$(NetHostDir)&quot; -D JDK_INC=&quot;$(JavaInclude)&quot;</CMakeDefines>
      <CMakeDefines Condition="'$(OS)'=='Unix'">$(CMakeDefines) -D NATIVE_ARCH=$(NativeArch) -D CMAKE_BUILD_TYPE=$(Configuration)</CMakeDefines>

      <CMakeGenerateArgs>$(CMakeDefines) -S &quot;$(NativeSource)&quot; -B&quot;$(NativeBuildDir)&quot;</CMakeGenerateArgs>
      <CMakeGenerateArgs Condition="'$(OS)'!='Unix'">-A $(NativeArch) $(CMakeGenerateArgs)</CMakeGenerateArgs>
    </PropertyGroup>

    <Error Condition="'$(JDKRoot)' == ''" Text="JDK path must be set" />

    <ItemGroup>
      <!-- <NativeOutputs Include="$(NativeBinDir)/$(Configuration)/$(NativeArch)/*$(MSBuildProjectName.ToLower()).*" /> -->
      <NativeOutputs Include="$(NetHostDir)/$(NetHostName)" />
    </ItemGroup>

    <Exec Command="gcc -shared dotnetbridge.c -fpic -I&quot;$(NetHostDir)&quot; -Iinc -I&quot;$(GeneratedInc)&quot; -I&quot;$(JavaInclude)&quot; -I&quot;$(JavaInclude)/linux&quot; -D LINUX -o &quot;$(NativeBinDir)/dotnetbridge&quot; -ldl -lnethost -L&quot;$(NetHostDir)&quot; -Wl,-rpath,'$ORIGIN',--disable-new-dtags"
          ConsoleToMsBuild="true"
          Condition="$([MSBuild]::IsOsPlatform('Linux'))" />

    <Exec Command="gcc -shared dotnetbridge.c -fpic -I&quot;$(NetHostDir)&quot; -Iinc -I&quot;$(GeneratedInc)&quot; -I&quot;$(JavaInclude)&quot; -I&quot;$(JavaInclude)/osx&quot; -D OSX -o &quot;$(NativeBinDir)/dotnetbridge&quot; -ldl -lnethost -L&quot;$(NetHostDir)&quot; -Wl,-rpath,'@loader_path'"
          ConsoleToMsBuild="true"
          Condition="$([MSBuild]::IsOsPlatform('OSX'))" />

    <Exec Command="cl.exe /LD dotnetbridge.c /I &quot;$(NetHostDir)&quot; /I inc /I &quot;$(GeneratedInc)&quot; /I &quot;$(JavaInclude)&quot; /I &quot;$(JavaInclude)\win32&quot; /D WINDOWS /EHsc /Od /GS /sdl /Zi /Fo&quot;$(NativeBinDir)\\&quot; /Fd&quot;$(NativeBinDir)\dotnetbridge.pdb&quot; /link &quot;$(NetHostDir)/nethost.lib&quot; /implib:&quot;$(NativeBinDir)\dotnetbridge.lib&quot; /out:&quot;$(NativeBinDir)\dotnetbridge.dll&quot;"
          ConsoleToMsBuild="true"
          Condition="$([MSBuild]::IsOsPlatform('Windows'))" />

    <!-- Copy the native project outputs to the demo directory -->
    <Copy SourceFiles="@(NativeOutputs)"
          DestinationFolder="$(BinRoot)/$(Configuration)"
          SkipUnchangedFiles="True" />
  </Target>

  <!-- Target to clean native project outputs -->
  <Target Name="CleanNativeProject"
          AfterTargets="Clean">
    <RemoveDir Directories="$(NativeBinDir)" />
  </Target>

</Project>
